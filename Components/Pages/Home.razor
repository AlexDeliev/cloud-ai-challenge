@page "/"
@using Azure;
@using Microsoft.Azure.CognitiveServices.Vision.ComputerVision;
@using Microsoft.Azure.CognitiveServices.Vision.ComputerVision.Models;

<PageTitle>Home</PageTitle>

<h1>Computer Vision</h1>

<p>Insert an image URL to analyze:</p>
<textarea @bind="urlOrPrompt" rows="2" cols="50"
          placeholder="Enter an image URL to analyze"></textarea>
<br />
<button @onclick="AnalyzeImage">Analyze Image</button>

@if (!string.IsNullOrWhiteSpace(imageUrl))
{
    <img src="@imageUrl" alt="Image to analyze" width="300" height="300" />
}

<p>@captionFromAnalysis</p>

@code {
    string urlOrPrompt = "";
    string imageUrl = "";
    string captionFromAnalysis = "";

    void AnalyzeImage()
    {

        var serviceOptions = new VisionServiceOptions(
        Environment.GetEnvironmentVariable("VISION_ENDPOINT"),
        new AzureKeyCredential(Environment.GetEnvironmentVariable("VISION_KEY")));
        // if keys are not set in environment variables, display in UI that environtment variables dont exist
       

        using var imageSource = VisionSource.FromUrl(
        new Uri(urlOrPrompt));
        imageUrl = new Uri(urlOrPrompt);

        var analysisOptions = new ImageAnalysisOptions()
            {
                Features = ImageAnalysisFeature.CropSuggestions | ImageAnalysisFeature.Caption
            };

        using var analyzer = new ImageAnalyzer(serviceOptions, imageSource, analysisOptions);

        var result = analyzer.Analyze();

        if (result.Reason == ImageAnalysisResultReason.Analyzed)
        {
            Console.WriteLine($" Image height = {result.ImageHeight}");
            Console.WriteLine($" Image width = {result.ImageWidth}");
            Console.WriteLine($" Model version = {result.ModelVersion}");

            if (result.Caption != null)
            {
                Console.WriteLine(" Caption:");
                Console.WriteLine($"   \"{result.Caption.Content}\", Confidence {result.Caption.Confidence:0.0000}");
                captionFromAnalysis = result.Caption.Content;
            }

        
        }
        else
        {
            var errorDetails = ImageAnalysisErrorDetails.FromResult(result);
            Console.WriteLine(" Analysis failed.");
            Console.WriteLine($"   Error reason : {errorDetails.Reason}");
            Console.WriteLine($"   Error code : {errorDetails.ErrorCode}");
            Console.WriteLine($"   Error message: {errorDetails.Message}");
        }

        


    }
}
